{"version":3,"file":"static/js/247.fd928f80.chunk.js","mappings":"oRAEMA,EAAM,mCACNC,EAAW,gCAEV,SAASC,IACd,OAAOC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,oCAAiDD,GACzD,CAEM,SAASI,EAAkBC,GAChC,OAAOF,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA8BI,EAA9B,oBAAiDL,EAAjD,mBACR,CAEM,SAASM,EAAeD,GAC7B,OAAOF,EAAAA,EAAAA,IAAA,UACFF,EADE,iBACeI,EADf,4BAC0CL,EAD1C,mBAGR,CAEM,SAASO,EAAkBF,GAChC,OAAOF,EAAAA,EAAAA,IAAA,UACFF,EADE,iBACeI,EADf,4BAC0CL,EAD1C,oBAGR,CAEM,SAASQ,EAAiBC,GAC/B,OAAON,EAAAA,EAAAA,IAAA,UACFF,EADE,gCAC8BD,EAD9B,4DACqFS,GAE7F,C,2IC1BYC,EAASC,EAAAA,EAAAA,IAAH,oHAObC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,uIAWHG,EAASH,EAAAA,EAAAA,OAAH,iYAoBnB,I,SCpCe,SAASI,IACtB,IACA,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQf,GAAYgB,EAAAA,EAAAA,MAAZhB,QACFiB,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,YACRtB,EAAAA,EAAAA,IAAkBC,GACfsB,MAAK,SAAAC,GACJR,GAAa,GACbF,EAASU,EAASC,KACnB,IACAC,OAAM,SAAAC,GAGL,MAFAX,GAAa,GACbY,MAAM,mBACA,IAAIC,MAAMF,EAAMG,QACvB,GACJ,GAAE,CAAC7B,IAKAc,GAEA,iCACE,SAACL,EAAD,CACEqB,QAAQ,WACRC,QAAS,WAAO,IAAD,IACbZ,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUe,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAJH,qBAQCrB,IACC,iCACE,4BACE,0BACGA,EAAMsB,MADT,KACkBtB,EAAMuB,aAAaC,MAAM,EAAG,GAD9C,QAGA,gBAAKC,IAxCD,mCAwCgBzB,EAAM0B,YAAaC,IAAI,GAAGC,OAAO,WACrD,4BACE,wBAAK5B,EAAMsB,SACX,wCAAgBO,OAAO7B,EAAM8B,cAAcC,QAAQ,OACnD,sCACA,uBAAI/B,EAAMgC,YACV,oCACA,uBAAIhC,EAAMiC,OAAOC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,cAG7C,mDACA,UAAC5C,EAAD,YACE,SAAC,EAAD,CAAY6C,GAAG,OAAOlB,MAAOf,EAASe,MAAtC,mBAGA,SAAC,EAAD,CAAYkB,GAAG,UAAUlB,MAAOf,EAASe,MAAzC,yBAKF,SAAC,KAAD,WAON,+BACE,mBACEF,QAAQ,WACRC,QAAS,WAAO,IAAD,IACbZ,EAAQ,iBAACF,QAAD,IAACA,GAAD,UAACA,EAAUe,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EAJH,sBAWP,C","sources":["components/services/api.js","pages/moviesDetalis.styled.jsx","pages/MoviesDetails.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '9391d9eb657d7ce69073c80004150e40';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport function fetchTrendingMovies() {\n  return axios.get(`${BASE_URL}trending/all/day?api_key=${KEY}`);\n}\n\nexport function fetchMovieDetails(movieId) {\n  return axios.get(`${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`);\n}\n\nexport function fetchMovieCast(movieId) {\n  return axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&`\n  );\n}\n\nexport function fetchMovieSearch(value) {\n  return axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${value}`\n  );\n}\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100px;\n  padding: 5px 10px;\n`;\n\nconst NavLInkInf = styled(NavLink)`\n  font-weight: 300;\n  color: black;\n  &.active {\n    color: blue;\n  }\n  &.hover {\n    color: blue;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  padding: 5px 10px;\n  font-size: 20px;\n  cursor: pointer;\n  text-align: center;\n  text-decoration: none;\n  outline: none;\n  color: white;\n  background-color: blue;\n  border: none;\n  border-radius: 15px;\n  box-shadow: 0 9px #999;\n  &:hover {\n    color: black;\n    box-shadow: 0 5px #666;\n    background-color: red;\n  }\n`;\n\nexport default NavLInkInf;\n","import { fetchMovieDetails } from 'components/services/api';\nimport { useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport NavLInkInf, { Button, NavDiv } from './moviesDetalis.styled';\n\nexport default function MoviesDetails() {\n  const baseURL = 'https://image.tmdb.org/t/p/w500/';\n  const [movie, setMovie] = useState([]);\n  const [completed, setCompleted] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchMovieDetails(movieId)\n      .then(response => {\n        setCompleted(true);\n        setMovie(response.data);\n      })\n      .catch(error => {\n        setCompleted(false);\n        alert('something wrong');\n        throw new Error(error.message);\n      });\n  }, [movieId]);\n\n  // const releaseYear = movie.slice(0, 4);\n  // let relise = movie.release_date.slice(0, 4);\n\n  if (completed) {\n    return (\n      <>\n        <Button\n          variant=\"outlined\"\n          onClick={() => {\n            navigate(location?.state?.from ?? '/');\n          }}\n        >\n          Go back\n        </Button>\n        {movie && (\n          <>\n            <div>\n              <h1>\n                {movie.title} ({movie.release_date.slice(0, 4)})\n              </h1>\n              <img src={baseURL + movie.poster_path} alt=\"\" height=\"450px\" />\n              <div>\n                <h2>{movie.title}</h2>\n                <p>User Score: {Number(movie.vote_average).toFixed(1)}</p>\n                <h3>Overview</h3>\n                <p>{movie.overview}</p>\n                <h3>Genres</h3>\n                <p>{movie.genres.map(el => el.name).join(' ')}</p>\n              </div>\n            </div>\n            <p>Additional information</p>\n            <NavDiv>\n              <NavLInkInf to=\"cast\" state={location.state}>\n                Cast\n              </NavLInkInf>\n              <NavLInkInf to=\"reviews\" state={location.state}>\n                Reviews\n              </NavLInkInf>\n            </NavDiv>\n\n            <Outlet />\n          </>\n        )}\n      </>\n    );\n  } else {\n    return (\n      <>\n        <button\n          variant=\"outlined\"\n          onClick={() => {\n            navigate(location?.state?.from ?? '/');\n          }}\n        >\n          Go back\n        </button>\n      </>\n    );\n  }\n}\n"],"names":["KEY","BASE_URL","fetchTrendingMovies","axios","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","fetchMovieSearch","value","NavDiv","styled","NavLInkInf","NavLink","Button","MoviesDetails","useState","movie","setMovie","completed","setCompleted","useParams","location","useLocation","navigate","useNavigate","useEffect","then","response","data","catch","error","alert","Error","message","variant","onClick","state","from","title","release_date","slice","src","poster_path","alt","height","Number","vote_average","toFixed","overview","genres","map","el","name","join","to"],"sourceRoot":""}